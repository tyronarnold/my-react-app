{"version":3,"sources":["Validations/UserValidation.js","components/FormControl2.js","index.js"],"names":["userSchema","yup","shape","name","required","email","password","min","confpassword","oneOf","FormControl2","nameRef","useRef","emailRef","passwordRef","confpasswordRef","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","useEffect","current","onSubmit","data","e","console","log","preventDefault","element","document","getElementById","classList","remove","add","className","type","ref","placeholder","message","value","onClick","elementInput","getElementsByTagName","id","ReactDOM","render"],"mappings":"+KAEaA,EAAaC,MAAaC,MAAM,CACzCC,KAAMF,MAAaG,WACnBC,MAAOJ,MAAaI,QAAQD,WAC5BE,SAAUL,MAAaM,IAAI,GAAGH,WAC9BI,aAAcP,MAAaQ,MAAM,CAACR,IAAQ,YAAa,S,uBC6G5CS,MA5Gf,WAAyB,IAAD,QAGdC,EAAUC,mBACVC,EAAWD,mBACXE,EAAcF,mBACdG,EAAkBH,mBAExB,EAAiEI,YAAQ,CACrEC,SAAUC,YAAYlB,KADlBmB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BC,EAA7C,EAAgCC,UAAaD,OAgD7C,OAhDA,EAAuDE,MAwCvDC,qBAAU,WACNb,EAAQc,QAAU,GAClBZ,EAASY,QAAU,GACnBX,EAAYW,QAAU,GACtBV,EAAgBU,QAAU,KAC3B,IAIC,kCACI,uBAAMC,SAAUN,GA9CL,SAACO,EAAMC,GACtBC,QAAQC,IAAIH,GACZC,EAAEG,iBACFpB,EAAQc,QAAUE,EAAKxB,KACvBU,EAASY,QAAUE,EAAKtB,MACxBS,EAAYW,QAAUE,EAAKrB,SAC3BS,EAAgBU,QAAUE,EAAKnB,aAC/B,IAAIwB,EAAUC,SAASC,eAAe,aACtCF,EAAQG,UAAUC,OAAO,kBACzBJ,EAAQG,UAAUE,IAAI,aACtBR,QAAQC,IAAIH,MAoCR,UACI,sBAAKW,UAAU,aAAf,UACI,0CAIA,mCAAOC,KAAK,OAAOpC,KAAK,OAAOqC,IAAK7B,EAChC8B,YAAY,cAAiBtB,EAAS,OAAQ,CAAEf,UAAU,MAE9D,sCAAIiB,EAAOlB,YAAX,aAAI,EAAauC,UACjB,uBACA,0CAIA,mCAAOH,KAAK,QAAQpC,KAAK,QAAQqC,IAAK3B,EAClC4B,YAAY,yBAA4BtB,EAAS,QAAS,CAAEf,UAAU,MAC1E,sCAAIiB,EAAOhB,aAAX,aAAI,EAAcqC,UAClB,uBACA,6CAIA,mCAAOH,KAAK,WAAWpC,KAAK,WAAWqC,IAAK1B,EACxC2B,YAAY,gDACRtB,EAAS,WAAY,CAAEf,UAAU,MACzC,sCAAIiB,EAAOf,gBAAX,aAAI,EAAiBoC,UACrB,uBACA,qDAIA,mCAAOH,KAAK,WAAWpC,KAAK,eAAeqC,IAAKzB,EAC5C0B,YAAY,4CAA+CtB,EAAS,eAAgB,CAAEf,UAAU,MACpG,sCAAIiB,EAAOb,oBAAX,aAAI,EAAqBkC,aAE7B,uBAAOH,KAAK,SAASI,MAAM,UAAUL,UAAU,iBAC/C,wBAAQM,QAASxB,GArEV,SAACO,EAAMC,GACtBA,EAAEG,iBACFJ,EAAKxB,KAAO,GACZ0B,QAAQC,IAAI,SACZ,IAAIe,EAAeZ,SAASa,qBAAqB,SAEjDjB,QAAQC,IAAIe,EAAa,IACzB,IAAIb,EAAUC,SAASC,eAAe,aACtCF,EAAQG,UAAUC,OAAO,aACzBJ,EAAQG,UAAUE,IAAI,kBACtBR,QAAQC,IAAI,aA2DuCQ,UAAU,eAArD,qBACA,sBAAKA,UAAU,iBAAiBS,GAAG,YAAnC,UACI,oBAAIA,GAAG,OAAP,SAAepC,EAAQc,UACvB,oBAAIsB,GAAG,QAAP,SAAgBlC,EAASY,UACzB,oBAAIsB,GAAG,SAAP,SAAiBjC,EAAYW,UAC7B,oBAAIsB,GAAG,eAAP,SAAwBhC,EAAgBU,mBCpG5DuB,IAASC,OACP,cAAC,EAAD,IAEAhB,SAASC,eAAe,U","file":"static/js/main.a282a54a.chunk.js","sourcesContent":["import * as yup from \"yup\";\r\n\r\nexport const userSchema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    email: yup.string().email().required(),\r\n    password: yup.string().min(6).required(),\r\n    confpassword: yup.string().oneOf([yup.ref(\"password\"), null])\r\n});\r\n\r\n","import '../styles.css';\r\nimport { userSchema } from '../Validations/UserValidation';\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\n\r\nfunction FormControl2() {\r\n\r\n\r\n    const nameRef = useRef();\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const confpasswordRef = useRef();\r\n\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        resolver: yupResolver(userSchema),\r\n    });\r\n\r\n    const submitForm = (data, e) => {\r\n        console.log(data);\r\n        e.preventDefault();\r\n        nameRef.current = data.name;\r\n        emailRef.current = data.email;\r\n        passwordRef.current = data.password;\r\n        confpasswordRef.current = data.confpassword;\r\n        var element = document.getElementById(\"card-info\");\r\n        element.classList.remove(\"info-card-hide\");\r\n        element.classList.add(\"info-card\");\r\n        console.log(data);\r\n\r\n    };\r\n\r\n    const myFunction = (data, e) => {\r\n        e.preventDefault();\r\n        data.name = '';\r\n        console.log('hello')\r\n        var elementInput = document.getElementsByTagName(\"input\");\r\n        \r\n        console.log(elementInput[0])\r\n        var element = document.getElementById(\"card-info\");\r\n        element.classList.remove(\"info-card\");\r\n        element.classList.add(\"info-card-hide\");\r\n        console.log('hello4')\r\n    }\r\n\r\n\r\n    function dataRef(data) {\r\n        console.log(data);\r\n        console.log(nameRef.current);\r\n        console.log(emailRef.current);\r\n        console.log(passwordRef.current);\r\n        console.log(confpasswordRef.current);\r\n    }\r\n\r\n    useEffect(() => {\r\n        nameRef.current = ''\r\n        emailRef.current = ''\r\n        passwordRef.current = ''\r\n        confpasswordRef.current = ''\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <section>\r\n            <form onSubmit={handleSubmit(submitForm)} >\r\n                <div className='form-style'>\r\n                    <label>\r\n                        Name:\r\n                    </label>\r\n\r\n                    <input type=\"text\" name=\"name\" ref={nameRef}\r\n                        placeholder='Enter name' {...register('name', { required: true })}\r\n                    />\r\n                    <p>{errors.name?.message}</p>\r\n                    <br />\r\n                    <label>\r\n                        Email\r\n                    </label>\r\n\r\n                    <input type=\"email\" name=\"email\" ref={emailRef}\r\n                        placeholder='info@greenbackend.com' {...register('email', { required: true })} />\r\n                    <p>{errors.email?.message}</p>\r\n                    <br />\r\n                    <label>\r\n                        Password\r\n                    </label>\r\n\r\n                    <input type=\"password\" name=\"password\" ref={passwordRef}\r\n                        placeholder='Please enter a password of at least 6 digits'\r\n                        {...register('password', { required: true })} />\r\n                    <p>{errors.password?.message}</p>\r\n                    <br />\r\n                    <label>\r\n                        Confirm Password\r\n                    </label>\r\n\r\n                    <input type=\"password\" name=\"confpassword\" ref={confpasswordRef}\r\n                        placeholder='Please re-enter the password you entered' {...register('confpassword', { required: true })} />\r\n                    <p>{errors.confpassword?.message}</p>\r\n                </div>\r\n                <input type=\"submit\" value=\"Sign Up\" className='input-submit' />\r\n                <button onClick={handleSubmit(myFunction)} className='input-submit'> Cancel</button>\r\n                <div className='info-card-hide' id='card-info'>\r\n                    <h3 id=\"name\">{nameRef.current}</h3>\r\n                    <h3 id=\"email\">{emailRef.current}</h3>\r\n                    <h3 id=\"passwd\">{passwordRef.current}</h3>\r\n                    <h3 id=\"confpassword\" >{confpasswordRef.current}</h3>\r\n                </div>\r\n            </form >\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default FormControl2\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from \"./App\"\n// import AppForm from \"./AppForm\"\n// import FormControl from \"./components/FormControl\"\nimport FormControl2 from \"./components/FormControl2\"\n\nReactDOM.render(\n  <FormControl2 />,\n  // <FormControl2 />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}